class WebhookService {
    async processWebhookData(topic, data) {
      try {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—É—é –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã –∏–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        const formattedMessage = this.formatMessage(topic, data);
        return formattedMessage;
      } catch (error) {
        console.error('Webhook service error:', error);
        throw error;
      }
    }
  
    formatMessage(topic, data) {
      // –ë–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–µ–º
      return `üîî –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ —Ç–µ–º–µ: ${topic}\n\n` +
             `üìù –î–∞–Ω–Ω—ã–µ:\n${JSON.stringify(data, null, 2)}`;
    }
}
  
module.exports = new WebhookService();